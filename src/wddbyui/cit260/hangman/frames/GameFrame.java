package wddbyui.cit260.hangman.frames;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import wddbyui.cit260.hangman.enums.Status;
import wddbyui.cit260.hangman.menus.MainMenuControl;
import wddbyui.cit260.hangman.menus.MainMenuView;
import wddbyui.cit260.hangman.words.Alphabet;
import wddbyui.cit260.hangman.words.MysteryWord;

/**
 *
 * @author Lorna
 */
public class GameFrame extends javax.swing.JFrame {
    
    private MysteryWord mysteryWord;
    private Alphabet alphabet = new Alphabet();
    private MainMenuView mainMenuView = new MainMenuView();
    private MainMenuControl mainMenuControl = new MainMenuControl();
    private Gallows gallows = new Gallows();

    private Status status;
    private char mysteryLetter;
    private String gallowsString = "";
    
    /**
     * Creates new form GameFrame
     */
    public GameFrame() throws IOException {
        this.setStatus(Status.PLAYING);
        
        this.mysteryWord = new MysteryWord();
        initComponents();
        
        if (!GetNamesFrame.getNameOfPlayer().isEmpty()) {
            this.jGuessWordLabel.setText(GetNamesFrame.getNameOfPlayer() + ", guess this word:");
        }
        
        this.jAlphabetLabel.setText(alphabet.displayArray());
        this.jMysteryWordDisplayLabel.setText(mysteryWord.displayMysteryWord('_'));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jpTitle = new javax.swing.JLabel();
        jExitButton = new javax.swing.JButton();
        jpInstructionsButton = new javax.swing.JButton();
        jLetterInputField = new javax.swing.JTextField();
        jEnterLetterLabel = new javax.swing.JLabel();
        jSubmitLetterButton = new javax.swing.JButton();
        jAlphabetLabel = new javax.swing.JLabel();
        jRemainingLettersLabel = new javax.swing.JLabel();
        jMysteryWordDisplayLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jGallowsArea = new javax.swing.JTextArea();
        jGuessWordLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jpTitle.setFont(new java.awt.Font("Minion Pro SmBd", 0, 36)); // NOI18N
        jpTitle.setForeground(new java.awt.Color(61, 61, 155));
        jpTitle.setText("Hangman");
        jpTitle.setName("jpTitle"); // NOI18N

        jExitButton.setFont(new java.awt.Font("Myriad Web Pro", 0, 16)); // NOI18N
        jExitButton.setText("Exit Game");
        jExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jExitButtonActionPerformed(evt);
            }
        });

        jpInstructionsButton.setFont(new java.awt.Font("Myriad Web Pro", 0, 16)); // NOI18N
        jpInstructionsButton.setText("Display Instructions");
        jpInstructionsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpInstructionsButtonActionPerformed(evt);
            }
        });

        jLetterInputField.setFont(new java.awt.Font("Myriad Pro", 0, 18)); // NOI18N
        jLetterInputField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jLetterInputField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(66, 66, 166), 2));
        jLetterInputField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLetterInputFieldActionPerformed(evt);
            }
        });

        jEnterLetterLabel.setFont(new java.awt.Font("Myriad Pro", 0, 16)); // NOI18N
        jEnterLetterLabel.setText("Enter your letter choice here:");

        jSubmitLetterButton.setFont(new java.awt.Font("Myriad Pro", 0, 16)); // NOI18N
        jSubmitLetterButton.setText("Submit Letter");
        jSubmitLetterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSubmitLetterButtonActionPerformed(evt);
            }
        });

        jAlphabetLabel.setFont(new java.awt.Font("Myriad Pro", 0, 18)); // NOI18N
        jAlphabetLabel.setText("a b c d e f g h i j k l m n o p q r s t u v w x y z");

        jRemainingLettersLabel.setFont(new java.awt.Font("Myriad Pro", 0, 16)); // NOI18N
        jRemainingLettersLabel.setText("Remaining Letters");

        jMysteryWordDisplayLabel.setBackground(new java.awt.Color(255, 247, 222));
        jMysteryWordDisplayLabel.setFont(new java.awt.Font("Myriad Pro", 0, 24)); // NOI18N
        jMysteryWordDisplayLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jMysteryWordDisplayLabel.setText("word");
        jMysteryWordDisplayLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(66, 66, 166), 2));

        jGallowsArea.setEditable(false);
        jGallowsArea.setBackground(new java.awt.Color(255, 247, 222));
        jGallowsArea.setColumns(20);
        jGallowsArea.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        jGallowsArea.setForeground(jpTitle.getForeground());
        jGallowsArea.setRows(5);
        jGallowsArea.setText("                       ______________\n                       |                              |\n                       |                              |\n                       |                              |\n                       |\n                       |\n                       |\n                       |\n                       |\n                       |\n                       |\n                       |\n                       |\n          ______|______________\n   ___|                                             |\n   |                                                    | ");
        jGallowsArea.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(66, 66, 166), 3));
        jScrollPane1.setViewportView(jGallowsArea);

        jGuessWordLabel.setFont(new java.awt.Font("Myriad Pro", 0, 16)); // NOI18N
        jGuessWordLabel.setText("Guess this word:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLetterInputField, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jSubmitLetterButton))
                            .addComponent(jpInstructionsButton)
                            .addComponent(jGuessWordLabel)
                            .addComponent(jEnterLetterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRemainingLettersLabel)
                            .addComponent(jMysteryWordDisplayLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(111, 111, 111)
                                .addComponent(jpTitle))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jAlphabetLabel))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(191, 191, 191)
                                .addComponent(jExitButton)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jpTitle)
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jpInstructionsButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jGuessWordLabel)
                        .addGap(18, 18, 18)
                        .addComponent(jMysteryWordDisplayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(jEnterLetterLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSubmitLetterButton, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                            .addComponent(jLetterInputField))
                        .addGap(29, 29, 29)
                        .addComponent(jRemainingLettersLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 11, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jAlphabetLabel)
                .addGap(18, 18, 18)
                .addComponent(jExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jpInstructionsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpInstructionsButtonActionPerformed
        InstructionsFrame instructionsFrame = new InstructionsFrame();
        instructionsFrame.setVisible(true);
    }//GEN-LAST:event_jpInstructionsButtonActionPerformed

    private void jExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jExitButtonActionPerformed
        this.dispose(); //exit the game
    }//GEN-LAST:event_jExitButtonActionPerformed

    private void jSubmitLetterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSubmitLetterButtonActionPerformed
        this.playTheGame();
    }//GEN-LAST:event_jSubmitLetterButtonActionPerformed

    private void jLetterInputFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLetterInputFieldActionPerformed
        this.playTheGame();
    }//GEN-LAST:event_jLetterInputFieldActionPerformed

    private void playTheGame() {
        mysteryLetter = this.jLetterInputField.getText().charAt(0);
        this.jMysteryWordDisplayLabel.setText(mysteryWord.displayMysteryWord(mysteryLetter));
        alphabet.setLetter(mysteryLetter);
        this.jAlphabetLabel.setText(alphabet.displayArray());
        this.jLetterInputField.setText("");
        gallows.displayGallows(mysteryWord.getNumberOfGuesses());
        this.jGallowsArea.setText(gallowsString);
        this.setStatus(mysteryWord.winOrLose());
        
        if (this.getStatus() == Status.WIN_GAME){
            displayWinningMessage();
        }
        else {
            if (this.getStatus() == Status.LOSE_GAME) {
                gallows.displayGallows(mysteryWord.getNumberOfGuesses());
                displayLosingMessage();
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new GameFrame().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(GameFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jAlphabetLabel;
    private javax.swing.JLabel jEnterLetterLabel;
    private javax.swing.JButton jExitButton;
    private javax.swing.JTextArea jGallowsArea;
    private javax.swing.JLabel jGuessWordLabel;
    private javax.swing.JTextField jLetterInputField;
    private javax.swing.JLabel jMysteryWordDisplayLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel jRemainingLettersLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jSubmitLetterButton;
    private javax.swing.JButton jpInstructionsButton;
    private javax.swing.JLabel jpTitle;
    // End of variables declaration//GEN-END:variables

    public Status getStatus() {
        return status;
    }

    private void setStatus(Status status) {
        this.status = status;
    }

    private void displayWinningMessage() {
        WinGameFrame winGameFrame = new WinGameFrame();
        winGameFrame.setVisible(true);
        this.dispose();
    }

    private void displayLosingMessage() {
        LoseGameFrame loseGameFrame = new LoseGameFrame();
        loseGameFrame.setVisible(true);
        this.dispose();
    }
    
    class Gallows {
            
        private void displayGallows(int gallowsChoice) {  

            switch(gallowsChoice){
                case 6:
                    gallowsString = ("\t------------"
                                   + "\n\t|          |"
                                   + "\n\t|          |"
                                   + "\n\t|"
                                   + "\n\t|" 
                                   + "\n\t|"
                                   + "\n\t|"
                                   + "\n\t|"
                                   + "\n\t|"
                                   + "\n\t|"
                                   + "\n");
                break;
            
                case 5:
                    gallowsString = ("\t------------"
                                   + "\n\t|          |"
                                   + "\n\t|          |"
                                   + "\n\t|          O"
                                   + "\n\t|" 
                                   + "\n\t|"
                                   + "\n\t|"
                                   + "\n\t|"
                                   + "\n\t|"
                                   + "\n\t|"
                                   + "\n");
                break;
                
                case 4:
                    gallowsString = ("\t------------"
                                   + "\n\t|          |"
                                   + "\n\t|          |"
                                   + "\n\t|          O"
                                   + "\n\t|          |" 
                                   + "\n\t|          |"
                                   + "\n\t|"
                                   + "\n\t|"
                                   + "\n\t|"
                                   + "\n\t|"
                                   + "\n");
                break;
            
                case 3:
                    gallowsString = ("\t------------"
                                   + "\n\t|          |"
                                   + "\n\t|          |"
                                   + "\n\t|          O"
                                   + "\n\t|         /|" 
                                   + "\n\t|          |"
                                   + "\n\t|"
                                   + "\n\t|"
                                   + "\n\t|"
                                   + "\n\t|"
                                   + "\n");
                break;
            
                case 2:
                    gallowsString = ("\t------------"
                                   + "\n\t|          |"
                                   + "\n\t|          |"
                                   + "\n\t|          O"
                                   + "\n\t|         /|\\" 
                                   + "\n\t|          |"
                                   + "\n\t|"
                                   + "\n\t|"
                                   + "\n\t|"
                                   + "\n\t|"
                                   + "\n");
                break;
            
                case 1:
                    gallowsString = ("\t------------"
                                   + "\n\t|          |"
                                   + "\n\t|          |"
                                   + "\n\t|          O"
                                   + "\n\t|         /|\\" 
                                   + "\n\t|          |"
                                   + "\n\t|         /"
                                   + "\n\t|"
                                   + "\n\t|"
                                   + "\n\t|"
                                   + "\n");
                break;
            
                case 0:
                    gallowsString = ("\t------------"
                                   + "\n\t|          |"
                                   + "\n\t|          |"
                                   + "\n\t|          O"
                                   + "\n\t|         /|\\" 
                                   + "\n\t|          |"
                                   + "\n\t|         / \\"
                                   + "\n\t|"
                                   + "\n\t|"
                                   + "\n\t|"
                                   + "\n");
                break;
            
                default:
                    gallowsString = ("\t------------"
                                   + "\n\t|          |"
                                   + "\n\t|          |"
                                   + "\n\t|"
                                   + "\n\t|" 
                                   + "\n\t|"
                                   + "\n\t|"
                                   + "\n\t|"
                                   + "\n\t|"
                                   + "\n\t|"
                                   + "\n");
                }
    }
       
}

}
